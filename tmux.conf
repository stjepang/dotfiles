set -g default-terminal "screen-256color"

set -s escape-time 0        # Don't treat Esc as Alt
set -g history-limit 100000 # Long history
set -g status-interval 1    # Update status every 1 sec
set -g base-index 1         # 1-based indexing
set -g renumber-windows on  # Renumber after creating/destroying windows
set -g status-keys emacs    # Normal keys when entering a command
setw -g mode-keys vi        # vi-like keys for dialogs

# Color theme
set -g mode-bg colour17
set -g mode-fg colour21
set -g status-bg colour18
set -g status-fg colour8
set -g message-bg colour19
set -g message-fg colour7
set -g pane-border-bg colour0
set -g pane-border-fg colour19
set -g pane-active-border-bg colour0
set -g pane-active-border-fg colour17
setw -g window-status-bg colour18
setw -g window-status-fg colour20
setw -g window-status-current-bg colour19
setw -g window-status-current-fg colour16
setw -g window-status-current-attr bold
setw -g window-status-activity-bg colour7
setw -g window-status-activity-fg colour19

# Put status on the right side
set -g status-left ""
set -g status-right " #F #S #h "

# Window status: index and path
set -g window-status-format ' #I #(pwd="#{pane_current_path}"; echo ${pwd####*/}) '
set -g window-status-current-format ' #I #(pwd="#{pane_current_path}"; echo ${pwd####*/}) '

# Set window title to current path
set -g set-titles on
set -g set-titles-string "#{pane_current_path}"

# Basic key bindings
set -g prefix M-t
bind M-t send-prefix
bind -n C-M-r source-file ~/.tmux.conf \; display-message "Config reloaded."
bind -n M-: command-prompt

# Session control
bind -n M-a choose-session
bind -n M-d detach
bind -n M-e new-session -c "#{pane_current_path}"
bind -n M-, command-prompt "rename-session %%"

# Selection, copying, pasting
bind -n M-u copy-mode
bind -n M-p run-shell "tmux set-buffer \"$(xclip -o -selection primary)\"; tmux paste-buffer"
bind -T copy-mode-vi y send -X copy-pipe 'xclip -in -selection primary' \; send -X clear-selection \; send -X cancel
bind -T copy-mode-vi v send -X begin-selection

# Pane management
bind -n M-s split-window -c "#{pane_current_path}"
bind -n M-m resize-pane -Z
bind -n M-i run-shell 'tmux setw main-pane-width $((`tmux display-message -p "#{window_width}"`/2)); tmux select-layout main-vertical'
# bind -n M-i select-layout main-vertical
bind -n M-o select-layout tiled
bind -n M-n select-pane -t +1
bind -n M-C-n swap-pane -s +1
bind -n M-Left resize-pane -L 1
bind -n M-Right resize-pane -R 1
bind -n M-Down resize-pane -D 1
bind -n M-up resize-pane -U 1
bind -n M-C-i join-pane -t :-1
bind -n M-C-o join-pane -t :+1
bind -n M-C-b break-pane
bind -n M-C-d kill-pane

# Window management
bind -n M-w new-window -a -c "#{pane_current_path}"
bind -n M-j previous-window
bind -n M-k next-window
bind -n M-1 select-window -t 1
bind -n M-2 select-window -t 2
bind -n M-3 select-window -t 3
bind -n M-4 select-window -t 4
bind -n M-5 select-window -t 5
bind -n M-6 select-window -t 6
bind -n M-7 select-window -t 7
bind -n M-8 select-window -t 8
bind -n M-9 select-window -t 9
bind -n M-C-j swap-window -t -1
bind -n M-C-k swap-window -t +1
